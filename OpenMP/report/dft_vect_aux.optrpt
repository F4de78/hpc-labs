Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.10.0 Build 20230609_000000

Compiler options: -std=c99 -fast -qopt-report=5 -qopt-report-phase=vec -fopenmp -o dft_vect_double

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect.c(122,3) inlined into omp_homework_vect.c(41,5)
   remark #15527: loop was not vectorized: function call to rand(void) cannot be vectorized   [ omp_homework_vect.c(123,5) ]
LOOP END

LOOP BEGIN at omp_homework_vect.c(124,3) inlined into omp_homework_vect.c(41,5)
   remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect.c(129,6) ]
   remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect.c(130,6) ]
   remark #15412: vectorization support: streaming store was generated for xr[n]   [ omp_homework_vect.c(129,6) ]
   remark #15412: vectorization support: streaming store was generated for xi[n]   [ omp_homework_vect.c(130,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15467: unmasked aligned streaming stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect.c(138,3) inlined into omp_homework_vect.c(45,5)
   remark #15388: vectorization support: reference xr_check[n] has aligned access   [ omp_homework_vect.c(139,6) ]
   remark #15388: vectorization support: reference xi_check[n] has aligned access   [ omp_homework_vect.c(140,6) ]
   remark #15412: vectorization support: streaming store was generated for xr_check[n]   [ omp_homework_vect.c(139,6) ]
   remark #15412: vectorization support: streaming store was generated for xi_check[n]   [ omp_homework_vect.c(140,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15467: unmasked aligned streaming stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect.c(138,3) inlined into omp_homework_vect.c(49,5)
   remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect.c(139,6) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect.c(140,6) ]
   remark #15412: vectorization support: streaming store was generated for Xr_o[n]   [ omp_homework_vect.c(139,6) ]
   remark #15412: vectorization support: streaming store was generated for Xi_o[n]   [ omp_homework_vect.c(140,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15467: unmasked aligned streaming stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect.c(88,3) inlined into omp_homework_vect.c(56,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at omp_homework_vect.c(94,7) inlined into omp_homework_vect.c(56,5)
      remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect.c(98,26) ]
      remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect.c(98,57) ]
      remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect.c(96,20) ]
      remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect.c(96,56) ]
      remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect.c(98,26) ]
      remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect.c(98,57) ]
      remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect.c(96,20) ]
      remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect.c(96,56) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.233
      remark #15355: vectorization support: tmp_i is double type reduction   [ omp_homework_vect.c(91,19) ]
      remark #15355: vectorization support: tmp_r is double type reduction   [ omp_homework_vect.c(90,19) ]
      remark #15355: vectorization support: tmp_i is double type reduction   [ omp_homework_vect.c(91,19) ]
      remark #15355: vectorization support: tmp_r is double type reduction   [ omp_homework_vect.c(90,19) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 5 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 901 
      remark #15477: vector cost: 94.500 
      remark #15478: estimated potential speedup: 9.530 
      remark #15482: vectorized math library calls: 4 
      remark #15487: type converts: 4 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at omp_homework_vect.c(88,3) inlined into omp_homework_vect.c(59,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at omp_homework_vect.c(94,7) inlined into omp_homework_vect.c(59,5)
      remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect.c(98,26) ]
      remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect.c(98,57) ]
      remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect.c(96,20) ]
      remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect.c(96,56) ]
      remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect.c(98,26) ]
      remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect.c(98,57) ]
      remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect.c(96,20) ]
      remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect.c(96,56) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.233
      remark #15355: vectorization support: tmp_i is double type reduction   [ omp_homework_vect.c(91,19) ]
      remark #15355: vectorization support: tmp_r is double type reduction   [ omp_homework_vect.c(90,19) ]
      remark #15355: vectorization support: tmp_i is double type reduction   [ omp_homework_vect.c(91,19) ]
      remark #15355: vectorization support: tmp_r is double type reduction   [ omp_homework_vect.c(90,19) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 5 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 901 
      remark #15477: vector cost: 94.500 
      remark #15478: estimated potential speedup: 9.530 
      remark #15482: vectorized math library calls: 4 
      remark #15487: type converts: 4 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at omp_homework_vect.c(107,5) inlined into omp_homework_vect.c(59,5)
   remark #15388: vectorization support: reference xr_check[n] has aligned access   [ omp_homework_vect.c(108,7) ]
   remark #15388: vectorization support: reference xr_check[n] has aligned access   [ omp_homework_vect.c(108,7) ]
   remark #15388: vectorization support: reference xi_check[n] has aligned access   [ omp_homework_vect.c(109,7) ]
   remark #15388: vectorization support: reference xi_check[n] has aligned access   [ omp_homework_vect.c(109,7) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 13 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect.c(148,3) inlined into omp_homework_vect.c(66,5)
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect.c(150,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect.c(152,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================
