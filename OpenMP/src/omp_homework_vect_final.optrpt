Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.10.0 Build 20230609_000000

Compiler options: -std=c99 -O3 -host -qopt-report=5 -qopt-report-phase=vec -fopenmp -o dft_aa -march=alderlake

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect_final.c(119,3) inlined into omp_homework_vect_final.c(44,5)
   remark #15527: loop was not vectorized: function call to rand(void) cannot be vectorized   [ omp_homework_vect_final.c(120,5) ]
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(121,3) inlined into omp_homework_vect_final.c(44,5)
   remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect_final.c(126,6) ]
   remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect_final.c(127,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(135,3) inlined into omp_homework_vect_final.c(48,5)
   remark #15388: vectorization support: reference xr_check[n] has aligned access   [ omp_homework_vect_final.c(136,6) ]
   remark #15388: vectorization support: reference xi_check[n] has aligned access   [ omp_homework_vect_final.c(137,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(135,3) inlined into omp_homework_vect_final.c(52,5)
   remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect_final.c(136,6) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(137,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(59,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(59,5)
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.055
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 61 
   remark #15477: vector cost: 18.250 
   remark #15478: estimated potential speedup: 3.320 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(59,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xi_o[n] has unaligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15389: vectorization support: reference Xi_o[n] has unaligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.289
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 61 
   remark #15477: vector cost: 18.250 
   remark #15478: estimated potential speedup: 3.320 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(59,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(62,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(62,5)
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.055
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 61 
   remark #15477: vector cost: 18.250 
   remark #15478: estimated potential speedup: 3.320 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(62,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xi_o[n] has unaligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15389: vectorization support: reference Xi_o[n] has unaligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.289
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 61 
   remark #15477: vector cost: 18.250 
   remark #15478: estimated potential speedup: 3.320 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5) inlined into omp_homework_vect_final.c(62,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(145,3) inlined into omp_homework_vect_final.c(69,5)
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect_final.c(147,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect_final.c(149,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(98,7) inlined into omp_homework_vect_final.c(59,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at omp_homework_vect_final.c(90,3) inlined into omp_homework_vect_final.c(59,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at omp_homework_vect_final.c(94,5) inlined into omp_homework_vect_final.c(59,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at omp_homework_vect_final.c(94,5) inlined into omp_homework_vect_final.c(59,5)
         remark #15389: vectorization support: reference xr has unaligned access   [ omp_homework_vect_final.c(98,24) ]
         remark #15388: vectorization support: reference xi has aligned access   [ omp_homework_vect_final.c(98,55) ]
         remark #15389: vectorization support: reference xr has unaligned access   [ omp_homework_vect_final.c(96,18) ]
         remark #15388: vectorization support: reference xi has aligned access   [ omp_homework_vect_final.c(96,54) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 0.235
         remark #15355: vectorization support: at (98:7) is double type reduction   [ omp_homework_vect_final.c(98,7) ]
         remark #15355: vectorization support: at (96:7) is double type reduction   [ omp_homework_vect_final.c(96,7) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 565 
         remark #15477: vector cost: 62.750 
         remark #15478: estimated potential speedup: 8.970 
         remark #15482: vectorized math library calls: 2 
         remark #15486: divides: 2 
         remark #15487: type converts: 2 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at omp_homework_vect_final.c(94,5) inlined into omp_homework_vect_final.c(59,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(98,7) inlined into omp_homework_vect_final.c(62,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at omp_homework_vect_final.c(90,3) inlined into omp_homework_vect_final.c(62,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at omp_homework_vect_final.c(94,5) inlined into omp_homework_vect_final.c(62,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at omp_homework_vect_final.c(94,5) inlined into omp_homework_vect_final.c(62,5)
         remark #15389: vectorization support: reference xr has unaligned access   [ omp_homework_vect_final.c(98,24) ]
         remark #15388: vectorization support: reference xi has aligned access   [ omp_homework_vect_final.c(98,55) ]
         remark #15389: vectorization support: reference xr has unaligned access   [ omp_homework_vect_final.c(96,18) ]
         remark #15388: vectorization support: reference xi has aligned access   [ omp_homework_vect_final.c(96,54) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 0.235
         remark #15355: vectorization support: at (98:7) is double type reduction   [ omp_homework_vect_final.c(98,7) ]
         remark #15355: vectorization support: at (96:7) is double type reduction   [ omp_homework_vect_final.c(96,7) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 565 
         remark #15477: vector cost: 62.750 
         remark #15478: estimated potential speedup: 8.970 
         remark #15482: vectorized math library calls: 2 
         remark #15486: divides: 2 
         remark #15487: type converts: 2 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at omp_homework_vect_final.c(94,5) inlined into omp_homework_vect_final.c(62,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: DFT(int, double *__restrict__, double *__restrict__, double *__restrict__, double *__restrict__)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect_final.c(104,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5)
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.055
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 61 
   remark #15477: vector cost: 18.250 
   remark #15478: estimated potential speedup: 3.320 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(105,7) ]
   remark #15389: vectorization support: reference Xi_o[n] has unaligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15389: vectorization support: reference Xi_o[n] has unaligned access   [ omp_homework_vect_final.c(106,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.289
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 61 
   remark #15477: vector cost: 18.250 
   remark #15478: estimated potential speedup: 3.320 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(104,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(89,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at omp_homework_vect_final.c(90,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at omp_homework_vect_final.c(94,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at omp_homework_vect_final.c(94,5)
         remark #15389: vectorization support: reference xr[n] has unaligned access   [ omp_homework_vect_final.c(98,24) ]
         remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect_final.c(98,55) ]
         remark #15389: vectorization support: reference xr[n] has unaligned access   [ omp_homework_vect_final.c(96,18) ]
         remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect_final.c(96,54) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 0.235
         remark #15355: vectorization support: *(Xi_o+k*8) is double type reduction   [ omp_homework_vect_final.c(98,7) ]
         remark #15355: vectorization support: *(Xr_o+k*8) is double type reduction   [ omp_homework_vect_final.c(96,7) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 565 
         remark #15477: vector cost: 62.750 
         remark #15478: estimated potential speedup: 8.970 
         remark #15482: vectorized math library calls: 2 
         remark #15486: divides: 2 
         remark #15487: type converts: 2 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at omp_homework_vect_final.c(94,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: fillInput(double *, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect_final.c(119,3)
   remark #15527: loop was not vectorized: function call to rand(void) cannot be vectorized   [ omp_homework_vect_final.c(120,5) ]
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(121,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(121,3)
<Multiversioned v1>
   remark #15389: vectorization support: reference xr[n] has unaligned access   [ omp_homework_vect_final.c(126,6) ]
   remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect_final.c(127,6) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.406
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 3.480 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(121,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference xr[n] has unaligned access   [ omp_homework_vect_final.c(126,6) ]
   remark #15389: vectorization support: reference xi[n] has unaligned access   [ omp_homework_vect_final.c(127,6) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.600
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(121,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(121,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: setOutputZero(double *, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect_final.c(135,3)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(135,3)
<Multiversioned v1>
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(136,6) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_final.c(137,6) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.406
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 3.480 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(135,3)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference Xr_o[n] has unaligned access   [ omp_homework_vect_final.c(136,6) ]
   remark #15389: vectorization support: reference Xi_o[n] has unaligned access   [ omp_homework_vect_final.c(137,6) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 1.600
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(135,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at omp_homework_vect_final.c(135,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: checkResults(double *, double *, double *, double *, double *, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect_final.c(145,3)
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect_final.c(147,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect_final.c(149,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: printResults(double *, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect_final.c(159,3)
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect_final.c(160,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================
