Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.10.0 Build 20230609_000000

Compiler options: -std=c99 -fast -qopt-report=5 -qopt-report-phase=vec -fopenmp -o dft_vect_double_simd

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at omp_homework_vect_simd.c(120,3) inlined into omp_homework_vect_simd.c(41,5)
   remark #15527: loop was not vectorized: function call to rand(void) cannot be vectorized   [ omp_homework_vect_simd.c(121,5) ]
LOOP END

LOOP BEGIN at omp_homework_vect_simd.c(122,3) inlined into omp_homework_vect_simd.c(41,5)
   remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect_simd.c(127,6) ]
   remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect_simd.c(128,6) ]
   remark #15412: vectorization support: streaming store was generated for xr[n]   [ omp_homework_vect_simd.c(127,6) ]
   remark #15412: vectorization support: streaming store was generated for xi[n]   [ omp_homework_vect_simd.c(128,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15467: unmasked aligned streaming stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_simd.c(136,3) inlined into omp_homework_vect_simd.c(45,5)
   remark #15388: vectorization support: reference xr_check[n] has aligned access   [ omp_homework_vect_simd.c(137,6) ]
   remark #15388: vectorization support: reference xi_check[n] has aligned access   [ omp_homework_vect_simd.c(138,6) ]
   remark #15412: vectorization support: streaming store was generated for xr_check[n]   [ omp_homework_vect_simd.c(137,6) ]
   remark #15412: vectorization support: streaming store was generated for xi_check[n]   [ omp_homework_vect_simd.c(138,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15467: unmasked aligned streaming stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_simd.c(136,3) inlined into omp_homework_vect_simd.c(49,5)
   remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect_simd.c(137,6) ]
   remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_simd.c(138,6) ]
   remark #15412: vectorization support: streaming store was generated for Xr_o[n]   [ omp_homework_vect_simd.c(137,6) ]
   remark #15412: vectorization support: streaming store was generated for Xi_o[n]   [ omp_homework_vect_simd.c(138,6) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15467: unmasked aligned streaming stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 4.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_simd.c(88,3) inlined into omp_homework_vect_simd.c(56,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at omp_homework_vect_simd.c(94,7) inlined into omp_homework_vect_simd.c(56,5)
      remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect_simd.c(96,22) ]
      remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect_simd.c(96,58) ]
      remark #15388: vectorization support: reference xr[n] has aligned access   [ omp_homework_vect_simd.c(98,28) ]
      remark #15388: vectorization support: reference xi[n] has aligned access   [ omp_homework_vect_simd.c(98,59) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.240
      remark #15355: vectorization support: *(Xr_o+k*8) is double type reduction   [ omp_homework_vect_simd.c(96,11) ]
      remark #15355: vectorization support: *(Xi_o+k*8) is double type reduction   [ omp_homework_vect_simd.c(98,11) ]
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 450 
      remark #15477: vector cost: 45.750 
      remark #15478: estimated potential speedup: 9.830 
      remark #15482: vectorized math library calls: 2 
      remark #15487: type converts: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at omp_homework_vect_simd.c(88,3) inlined into omp_homework_vect_simd.c(59,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at omp_homework_vect_simd.c(94,7) inlined into omp_homework_vect_simd.c(59,5)
      remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect_simd.c(96,22) ]
      remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_simd.c(96,58) ]
      remark #15388: vectorization support: reference Xr_o[n] has aligned access   [ omp_homework_vect_simd.c(98,28) ]
      remark #15388: vectorization support: reference Xi_o[n] has aligned access   [ omp_homework_vect_simd.c(98,59) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.240
      remark #15355: vectorization support: *(xr_check+k*8) is double type reduction   [ omp_homework_vect_simd.c(96,11) ]
      remark #15355: vectorization support: *(xi_check+k*8) is double type reduction   [ omp_homework_vect_simd.c(98,11) ]
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 450 
      remark #15477: vector cost: 45.750 
      remark #15478: estimated potential speedup: 9.830 
      remark #15482: vectorized math library calls: 2 
      remark #15487: type converts: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at omp_homework_vect_simd.c(105,5) inlined into omp_homework_vect_simd.c(59,5)
   remark #15388: vectorization support: reference xr_check[n] has aligned access   [ omp_homework_vect_simd.c(106,7) ]
   remark #15388: vectorization support: reference xr_check[n] has aligned access   [ omp_homework_vect_simd.c(106,7) ]
   remark #15388: vectorization support: reference xi_check[n] has aligned access   [ omp_homework_vect_simd.c(107,7) ]
   remark #15388: vectorization support: reference xi_check[n] has aligned access   [ omp_homework_vect_simd.c(107,7) ]
   remark #15305: vectorization support: vector length 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 13 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 5.200 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at omp_homework_vect_simd.c(146,3) inlined into omp_homework_vect_simd.c(66,5)
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect_simd.c(148,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ omp_homework_vect_simd.c(150,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================
